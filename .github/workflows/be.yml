name: CI/CD pipeline-be

on:
  workflow_call:
    inputs:
      sonarqube_host:
        description: "the host URL"
        type: string
        required: true
      sonarqube_token:
        description: "SonarQube Token"
        type: string
        required: true

env:
  be_image_name: "be-team4-project2"

jobs:
  build_test_scan_push_be:
    runs-on: ubuntu-latest
    outputs:
      TF_VAR_be_full_image_name: ${{steps.output-step.outputs.be_full_image_name}}
    steps:
      - name: checkout the repository
        uses: actions/checkout@v5

      - name: git commit
        run: |
          VERSION=$(git rev-parse --short HEAD)
          echo "COMMIT_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Install dependencies
        working-directory: ./backend
        run: mvn clean install -DskipTests

      - name: Run tests
        working-directory: ./backend
        run: mvn test

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v6.0.0
        env:
          SONAR_TOKEN: ${{ inputs.sonarqube_token }}
          SONAR_HOST_URL: ${{ inputs.sonarqube_host }}
        with:
          args: >
            -Dsonar.projectKey=backend-project
            -Dsonar.sources=src/main/java
            -Dsonar.tests=src/test/java
            -Dsonar.java.binaries=target/classes
            -Dsonar.projectBaseDir=backend

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          context: ./backend
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{env.be_image_name}}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/${{env.be_image_name}}:${{env.COMMIT_VERSION}}
      - name: Output image name
        id: output-step
        run: echo "be_full_image_name=${{ secrets.DOCKERHUB_USERNAME }}/${{env.be_image_name}}:${{env.COMMIT_VERSION}}" >> $GITHUB_OUTPUT
