name: Provision & Setup SonarQube with Ansible

on:
  workflow_call:

env:
  TF_WORKING_DIR: ./terraform-sonarqube
  SONAR_PORT: 9000

jobs:
  provision_and_configure:
    runs-on: ubuntu-latest
    outputs:
      vm_ip: ${{ steps.get_vm_ip.outputs.vm_ip }}
      sonar_token: ${{ steps.get_token.outputs.sonar_token }}
      sonar_url: ${{steps.get_sonar_url.outputs.url}}

    env:
      TF_VAR_subscription_id: ${{secrets.subscription_id}}
      TF_VAR_admin_password: ${{secrets.admin_password}}
      TF_VAR_admin_username: ${{secrets.admin_username}}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Ansible
        run: |
          pip install ansible requests

      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}

      - name: Terraform Init
        working-directory: ${{env.TF_WORKING_DIR}}
        run: terraform init

      - name: Terraform Apply
        working-directory: ${{env.TF_WORKING_DIR}}
        run: terraform apply --auto-approve

      - name: Get VM IP
        id: get_vm_ip
        working-directory: ${{env.TF_WORKING_DIR}}
        run: |
          VM_IP=$(terraform output -raw ip)
          echo "vm_ip=$VM_IP" >> $GITHUB_OUTPUT

      - name: Wait for SonarQube VM to be accessible
        run: |
          echo "Waiting for VM to be ready..."
          for i in {1..30}; do
            if timeout 5 bash -c "cat < /dev/null > /dev/tcp/${{ steps.get_vm_ip.outputs.vm_ip }}/22"; then
              echo "VM is accessible"
              exit 0
            fi
            echo "Attempt $i: VM not ready yet, waiting..."
            sleep 10
          done
          echo "VM did not become accessible in time"
          exit 1

      - name: Configure SonarQube with Ansible
        id: configure
        working-directory: ./ansible
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"
          VM_IP: ${{ steps.get_vm_ip.outputs.vm_ip }}
          NEW_ADMIN_PASSWORD: ${{ secrets.NEW_ADMIN_PASSWORD }}
        run: |
          ansible-playbook \
            -e "sonar_host=${VM_IP}" \
            -e "sonar_port=${{ env.SONAR_PORT }}" \
            -e "new_admin_password=${NEW_ADMIN_PASSWORD}" \
            configure-sonarqube.yml

      - name: Extract SonarQube Token
        id: get_token
        run: |
          SONAR_TOKEN=$(cat /tmp/sonar_token)
          echo "::add-mask::$SONAR_TOKEN"
          echo "sonar_token=$SONAR_TOKEN" >> $GITHUB_OUTPUT

      - name: Display Outputs
        id: get_sonar_url
        run: |
          echo "url=http://${{ steps.get_vm_ip.outputs.vm_ip }}:${{ env.SONAR_PORT }}" >> $GITHUB_OUTPUT
          echo "Configuration completed successfully"
